http:
  port: ${PORT_HTTP:-8080}
  hostname: '0.0.0.0'
https:
  port: ${PORT_HTTPS:-443}
  hostname: '0.0.0.0'
  tls:
    "default":
      key: ${SSL_KEY_PATH}
      cert: ${SSL_CERT_PATH}

# API ENDPOINTS DEFINITION #

## GATEWAY CUSTOM ENDPOINT ##
apiEndpoints:

  ## ACTIVITY ENDPOINTS ##
  activityPrivateApi:
    ### USERS.CHILDREN.PHYSICALACTIVITIES || USERS.CHILDREN.PHYSICALACTIVITIES.LOGS###
    - host: '*'
      paths:
        - '/users/children/:child_id/physicalactivities'
        - '/users/children/:child_id/physicalactivities/*'
      methods: ["POST"]
      scopes: ['physicalactivities:create']

    - host: '*'
      paths: ['/users/children/physicalactivities']
      methods: ["GET"]
      scopes: ['physicalactivities:readAll']

    - host: '*'
      paths:
        - '/users/children/:child_id/physicalactivities'
        - '/users/children/:child_id/physicalactivities/*'
      methods: ["GET"]
      scopes: ['physicalactivities:read']

    - host: '*'
      paths: ['/users/children/:child_id/physicalactivities/:physicalactivity_id']
      methods: ["PATCH"]
      scopes: ['physicalactivities:update']

    - host: '*'
      paths: ['/users/children/:child_id/physicalactivities/:physicalactivity_id']
      methods: ["DELETE"]
      scopes: ['physicalactivities:delete']

    ### USERS.CHILDREN.SLEEP ###
    - host: '*'
      paths: ['/users/children/:child_id/sleep']
      methods: ["POST"]
      scopes: ['sleep:create']

    - host: '*'
      paths: ['/users/children/sleep']
      methods: ["GET"]
      scopes: ['sleep:readAll']

    - host: '*'
      paths:
        - '/users/children/:child_id/sleep'
        - '/users/children/:child_id/sleep/*'
      methods: ["GET"]
      scopes: ['sleep:read']

    - host: '*'
      paths: ['/users/children/:child_id/sleep/:sleep_id']
      methods: ["PATCH"]
      scopes: ['sleep:update']

    - host: '*'
      paths: ['/users/children/:child_id/sleep/:sleep_id']
      methods: ["DELETE"]
      scopes: ['sleep:delete']

  ## ENVIRONMENT ENDPOINTS ##
  environmentPrivateAPI:
    ### ENVIRONMENTS ###
    - host: '*'
      paths: ['/environments']
      methods: ["POST"]
      scopes: ['environment:create']

    - host: '*'
      paths: ['/environments']
      methods: ["GET"]
      scopes: ['environment:read']

    - host: '*'
      paths: ['/environments/:environment_id']
      methods: ["DELETE"]
      scopes: ['environment:delete']

  ## MISSION ENDPOINTS ##
  missionsPrivateAPI:
    ### USERS.CHILDREN.MISSIONS ###
    - host: '*'
      paths: ['/users/children/:child_id/missions']
      methods: ["POST"]
      scopes: ['missions:create']

    - host: '*'
      paths:
        - '/users/children/:child_id/missions'
        - '/users/children/:child_id/missions/:mission_id'
      methods: ["GET"]
      scopes: ['missions:read']

    - host: '*'
      paths: ['/users/children/:child_iscopesd/missions/:mission_id']
      methods: ["PATCH"]
      scopes: ['missions:update']

    - host: '*'
      paths: ['/users/children/:child_id/missions/:mission_id']
      methods: ["DELETE"]
      scopes: ['missions:delete']

  ## QUESTINNAIRES ENDPOINTS ##
  questionnairesPrivateAPI:
    ### USERS.CHILDREN.QUESTIONNAIRES ###
    - host: '*'
      paths: ['/users/children/:child_id/questionnaires/types/:questionnaire_type']
      methods: ["POST"]
      scopes: ['questionnaires:create']

    - host: '*'
      paths:
        - '/users/children/:child_id/questionnaires'
        - '/users/children/:child_id/questionnaires/:questionnaire_id'
        - '/users/children/:child_id/questionnaires/types/:questionnaire_type'
      methods: ["GET"]
      scopes: ['questionnaires:read']

    - host: '*'
      paths: ['/users/children/:child_id/questionnaires/:questionnaire_id']
      methods: ["PATCH"]
      scopes: ['questionnaires:update']

    - host: '*'
      paths: ['/users/children/:child_id/questionnaires/:questionnaire_id']
      methods: ["DELETE"]
      scopes: ['questionnaires:delete']

  ## GAMIFICATION ENDPOINTS ##
  gamificationPrivateAPI:
    ### USERS.CHILDREN.GAMIFICATIONPROFILE ###
    - host: '*'
      paths: ['/users/children/:child_id//gamificationprofile']
      methods: ["POST"]
      scopes: ['gamificationprofile:create']

    - host: '*'
      paths: ['/users/children/:child_id//gamificationprofile']
      methods: ["GET"]
      scopes: ['gamificationprofile:read']

    - host: '*'
      paths: ['/users/children/:child_id//gamificationprofile']
      methods: ["PATCH"]
      scopes: ['gamificationprofile:update']

    - host: '*'
      paths: ['/users/children/:child_id//gamificationprofile']
      methods: ["DELETE"]
      scopes: ['gamificationprofile:delete']

  ## ACCOUNT ENDPOINTS ##
  accountPublicApi:
    - host: 'localhost'
      paths:
        - '/users/children'
        - '/users/educators'
        - '/users/families'
        - '/users/healthprofessionals'
        - '/users/applications'
        - '/institutions'
      methods: ['POST','GET']

    ### AUTH ###
    - host: '*'
      paths: ['/auth', '/auth/revoke']
      methods: ['POST']

    ### USERS ###
    - host: '*'
      paths: ['/users/:user_id/password']
      methods: ['PATCH']

  accountPrivateApi:
    ### USERS ###
    - host: '*'
      paths: ['/users/:user_id']
      methods: ['DELETE']
      scopes: ['users:delete']

    ### USERS.CHILDREN ###
    - host: '*'
      paths: ['/users/children']
      methods: ['POST']
      scopes: ['children:create']

    - host: '*'
      paths: ['/users/children']
      methods: ['GET']
      scopes: ['children:readAll']

    - host: '*'
      paths: ['/users/children/:child_id']
      methods: ['GET']
      scopes: ['children:read']

    - host: '*'
      paths: ['/users/children/:child_id']
      methods: ['PATCH']
      scopes: ['children:update']

    - host: '*'
      paths: ['/users/children/:child_id']
      methods: ['DELETE']
      scopes: ['children:delete']

    ### USERS.EDUCATORS ###
    - host: '*'
      paths: ['/users/educators']
      methods: ['POST']
      scopes: ['educators:create']

    - host: '*'
      paths: ['/users/educators']
      methods: ['GET']
      scopes: ['educators:readAll']

    - host: '*'
      paths: ['/users/educators/:educator_id']
      methods: ['GET']
      scopes: ['educators:read']

    - host: '*'
      paths: ['/users/educators/:educator_id']
      methods: ['PATCH']
      scopes: ['educators:update']

    - host: '*'
      paths: ['/users/educators/:educator_id']
      methods: ['DELETE']
      scopes: ['educators:delete']

    ### USERS.FAMILIES || USERS.FAMILIES.CHILDREN ###
    - host: '*'
      paths: ['/users/families', '/users/families/:family_id/children/:child_id']
      methods: ['POST']
      scopes: ['families:create']

    - host: '*'
      paths: ['/users/families']
      methods: ['GET']
      scopes: ['families:readAll']

    - host: '*'
      paths: ['/users/families/:family_id', '/users/families/:family_id/children']
      methods: ['GET']
      scopes: ['families:read']

    - host: '*'
      paths: ['/users/families/:family_id']
      methods: ['PATCH']
      scopes: ['families:update']

    - host: '*'
      paths:
        - '/users/families/:family_id'
        - '/users/families/:family_id/children/:child_id'
      methods: ['DELETE']
      scopes: ['families:delete']

    ### USERS.HEALTHPROFESSIONALS ###
    - host: '*'
      paths: ['/users/healthprofessionals']
      methods: ['POST']
      scopes: ['healthprofessionals:create']

    - host: '*'
      paths: ['/users/healthprofessionals']
      methods: ['GET']
      scopes: ['healthprofessionals:readAll']

    - host: '*'
      paths: ['/users/healthprofessionals/:healthprofessional_id']
      methods: ['GET']
      scopes: ['healthprofessionals:read']

    - host: '*'
      paths: ['/users/healthprofessionals/:healthprofessional_id']
      methods: ['PATCH']
      scopes: ['healthprofessionals:update']

    - host: '*'
      paths: ['/users/healthprofessionals/:healthprofessional_id']
      methods: ['DELETE']
      scopes: ['healthprofessionals:delete']

    ### USERS.EDUCATORS.CHILDREN.GROUPS || USERS.HEALTHPROFESSIONALS.CHILDREN.GROUPS ###
    - host: '*'
      paths:
        - '/users/educators/:educator_id/children/groups'
        - '/users/healthprofessionals/:healthprofessional_id/children/groups'
      methods: ['POST']
      scopes: ['childrengroups:create']

    - host: '*'
      paths:
        - '/users/educators/:educator_id/children/groups'
        - '/users/educators/:educator_id/children/groups/:group_id'
        - '/users/healthprofessionals/:healthprofessional_id/children/groups'
        - '/users/healthprofessionals/:healthprofessional_id/children/groups/:group_id'
      methods: ['GET']
      scopes: ['childrengroups:read']

    - host: '*'
      paths:
        - '/users/educators/:educator_id/children/groups/:group_id'
        - '/users/healthprofessionals/:healthprofessional_id/children/groups/:group_id'
      methods: ['PATCH']
      scopes: ['childrengroups:update']

    - host: '*'
      paths:
        - '/users/educators/:educator_id/children/groups/:group_id'
        - '/users/healthprofessionals/:healthprofessional_id/children/groups/:group_id'
      methods: ['DELETE']
      scopes: ['childrengroups:delete']

    ### USERS.APPLICATIONS ###
    - host: '*'
      paths: ['/users/applications']
      methods: ['POST']
      scopes: ['applications:create']

    - host: '*'
      paths: ['/users/applications']
      methods: ['GET']
      scopes: ['applications:readAll']

    - host: '*'
      paths: ['/users/applications/:application_id']
      methods: ['GET']
      scopes: ['applications:read']

    - host: '*'
      paths: ['/users/applications/:application_id']
      methods: ['PATCH']
      scopes: ['applications:update']

    - host: '*'
      paths: ['/users/applications/:application_id']
      methods: ['DELETE']
      scopes: ['applications:delete']

    ### INSTITUTIONS ###
    - host: '*'
      paths: ['/institutions']
      methods: ['POST']
      scopes: ['institutions:create']

    - host: '*'
      paths: ['/institutions']
      methods: ['GET']
      scopes: ['institutions:readAll']

    - host: '*'
      paths: ['/institutions/:institution_id']
      methods: ['GET']
      scopes: ['institutions:read']

    - host: '*'
      paths: ['/institutions/:institution_id']
      methods: ['PATCH']
      scopes: ['institutions:update']

    - host: '*'
      paths: ['/institutions/:institution_id']
      methods: ['DELETE']
      scopes: ['institutions:delete']

####### SERVICE ENDPOINTS DEFINITIONS ########
serviceEndpoints:
  gatewayService:
    url: '${API_GATEWAY_SERVICE:-http://localhost:8080}'
  accountService:
    url: '${ACCOUNT_SERVICE:-https://localhost:3001}'
  activityService:
    url: '${ACTIVITY_SERVICE:-https://localhost:4001}'
  missionService:
    url: '${MISSION_SERVICE:-http://localhost:5001}'
  questionnaireService:
    url: '${QUESTIONNAIRE_SERVICE:-http://localhost:6001}'
  gamificationService:
    url: '${GAMIFICATION_SERVICE:-http://localhost:7001}'

####### POLICIES USED IN PIPELINES DEFINITION ########
policies:
  - log
  - proxy
  - rate-limit
  - ocariot-jwtScopes-policy
  - ocariot-jwt-policy
  - ocariot-auth-policy
  - ocariot-body-parser-policy
  - ocariot-delete-user-policy
#  - cors:
#      - action:
#          origin: '*'
#          methods: ['HEAD', 'GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS']
#          allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept']
#          credentials: true
#          preflightContinue: false
#          optionsSuccessStatus: 200

####### PIPELINES DEFINITION ########
#### Pipeline no manage data coming from ACCOUNT PRIVATE and PUBLIC APIs ####
pipelines:
  accountPublicPipeline:
    apiEndpoints: ['accountPublicApi']
    policies:
      - ocariot-body-parser-policy:
      - ocariot-auth-policy:
          - condition:
              name: 'is-auth'
              authpath: '/auth'
            action:
              urlauthservice: ${ACCOUNT_SERVICE:-http://localhost:5000}/auth
              secretOrPublicKeyFile: ${JWT_PUBLIC_KEY_PATH:-./.certs/jwt.pem}
              issuer: ${ISSUER:-ocariot}
      - proxy:
          - action:
              prependPath:  true
              ignorePath:   false
              stripPath:    false
              changeOrigin: true
              timeout: 10000
              secure: false
              serviceEndpoint: accountService

  accountPrivatePipeline:
    apiEndpoints: ['accountPrivateApi']
    policies:
      - ocariot-body-parser-policy:
      - ocariot-jwt-policy:
          - action:
              secretOrPublicKeyFile: ${JWT_PUBLIC_KEY_PATH:-./.certs/jwt.pem}
              issuer: ${ISSUER:-ocariot}
      - ocariot-jwtScopes-policy:
      - ocariot-delete-user-policy:
          - condition:
              name: 'is-delete'
              #deletepath é uma expressão regular
              deletepath: '^(\/users\/)[a-fA-F0-9]{24}$'
            action:
              urldeleteservice: ${ACCOUNT_SERVICE:-http://localhost:5000}/users
      - proxy:
          - action:
              prependPath:  true
              ignorePath:   false
              stripPath:    false
              changeOrigin: true
              secure: false
              timeout: 10000
              serviceEndpoint: accountService

  #### Pipelines to manage data coming from ACTIVITY PRIVATE and PUBLIC APIs ####
  activityPrivatePipeline:
    apiEndpoints: ['activityPrivateApi', 'environmentPrivateAPI']
    policies:
      - ocariot-body-parser-policy:
      - ocariot-jwt-policy:
          - action:
              secretOrPublicKeyFile: ${JWT_PUBLIC_KEY_PATH:-./.certs/jwt.pem}
              issuer: ${ISSUER:-ocariot}
      - ocariot-jwtScopes-policy:
      - proxy:
          - action:
              prependPath:  true
              ignorePath:   false
              stripPath:    false
              changeOrigin: true
              secure: false
              timeout: 10000
              serviceEndpoint: activityService

  #### Pipelines to manage data coming from MISIONS PRIVATE and PUBLIC APIs ####
  missionsPrivatePipeline:
    apiEndpoints: ['missionsPrivateAPI']
    policies:
      - ocariot-body-parser-policy:
      - ocariot-jwt-policy:
          - action:
              secretOrPublicKeyFile: ${JWT_PUBLIC_KEY_PATH:-./.certs/jwt.pem}
              issuer: ${ISSUER:-ocariot}
      - ocariot-jwtScopes-policy:
      - proxy:
          - action:
              prependPath:  true
              ignorePath:   false
              stripPath:    false
              changeOrigin: true
              secure: false
              timeout: 10000
              serviceEndpoint: missionService

  #### Pipelines to manage data coming from MISIONS PRIVATE and PUBLIC APIs ####
  questinnairesPrivatePipeline:
    apiEndpoints: ['questionnairesPrivateAPI']
    policies:
      - ocariot-body-parser-policy:
      - ocariot-jwt-policy:
          - action:
              secretOrPublicKeyFile: ${JWT_PUBLIC_KEY_PATH:-./.certs/jwt.pem}
              issuer: ${ISSUER:-ocariot}
      - ocariot-jwtScopes-policy:
      - proxy:
          - action:
              prependPath:  true
              ignorePath:   false
              stripPath:    false
              changeOrigin: true
              secure: false
              timeout: 10000
              serviceEndpoint: questionnaireService

  #### Pipelines to manage data coming from MISIONS PRIVATE and PUBLIC APIs ####
  gamificationPrivatePipeline:
    apiEndpoints: ['gamificationPrivateAPI']
    policies:
      - ocariot-body-parser-policy:
      - ocariot-jwt-policy:
          - action:
              secretOrPublicKeyFile: ${JWT_PUBLIC_KEY_PATH:-./.certs/jwt.pem}
              issuer: ${ISSUER:-ocariot}
      - ocariot-jwtScopes-policy:
      - proxy:
          - action:
              prependPath:  true
              ignorePath:   false
              stripPath:    false
              changeOrigin: true
              secure: false
              timeout: 10000
              serviceEndpoint: gamificationService
